# 设置继承自ubuntu官方镜像
FROM ubuntu:latest 

MAINTAINER hzy

RUN apt-get update && apt-get install -y --no-install-recommends \
		ca-certificates \
		wget \
    curl \
    vim \
		&& rm -rf /var/lib/apt/lists/*


RUN echo "Asia/Shanghai" > /etc/timezone \
	&& ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

# 添加User和Group
RUN groupadd -r nginx \
    && useradd -r -g nginx nginx

# 设置 NGINX 的环境变量，若读者有其他的环境变量需要设置，也可以在这里添加。
ENV NGINX_HOME /software/nginx 


# 安装升级gcc
RUN apt-get update \
    && apt-get -y install build-essential \
		&& rm -rf /var/lib/apt/lists/*
		
ENV NGINX_VERSION 1.11.2
ENV LUAJIT_VERSION 2.0.3
ENV NGX_DEVEL_KIT_VERSION 0.2.19
ENV NGINX_LUA_MODULE_VERSION 0.10.2
ENV PCRE_VER 8.41
ENV SSL_VER 1.0.2h
ENV ZLIB_VER 1.2.11


ADD ngx_cache_purge-2.3.tar.gz /software/temp

RUN mkdir -p /software/temp

RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
    && tar -zxvf nginx-${NGINX_VERSION}.tar.gz -C /software/temp

RUN wget http://www.openssl.org/source/openssl-${SSL_VER}.tar.gz \
    && tar -zxvf openssl-${SSL_VER}.tar.gz -C /software/temp

RUN wget http://downloads.sourceforge.net/project/pcre/pcre/${PCRE_VER}/pcre-${PCRE_VER}.tar.gz \
    && tar -zxvf pcre-${PCRE_VER}.tar.gz -C /software/temp
    
RUN wget http://zlib.net/zlib-${ZLIB_VER}.tar.gz \
    && tar -zxvf zlib-${ZLIB_VER}.tar.gz -C /software/temp

RUN wget http://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz \
&& tar -zxvf LuaJIT-${LUAJIT_VERSION}.tar.gz -C /software/temp

RUN wget https://github.com/openresty/lua-nginx-module/archive/v${NGINX_LUA_MODULE_VERSION}.tar.gz \
&& tar -zxvf v${NGINX_LUA_MODULE_VERSION}.tar.gz -C /software/temp
	
RUN wget https://github.com/simpl/ngx_devel_kit/archive/v${NGX_DEVEL_KIT_VERSION}.tar.gz \
&& tar -zxvf v${NGX_DEVEL_KIT_VERSION}.tar.gz -C /software/temp	
	
	
RUN cd /software/temp/LuaJIT-${LUAJIT_VERSION} \
	&& make PREFIX=/usr/local/luajit \
		&& make install  PREFIX=/usr/local/luajit

ENV LUAJIT_LIB /usr/local/luajit/lib   
ENV LUAJIT_INC /usr/local/luajit/include/luajit-2.0
  
RUN cd /software/temp/nginx-$NGINX_VERSION \
    && ./configure --sbin-path=/usr/sbin/nginx --conf-path=$NGINX_HOME/nginx.conf \
    		--error-log-path=/var/log/nginx/error.log \
				--http-log-path=/var/log/nginx/access.log \
				--http-client-body-temp-path=/tmp/client_temp \
				--http-proxy-temp-path=/tmp/proxy_temp \
				--http-fastcgi-temp-path=/tmp/fastcgi_temp \
				--http-uwsgi-temp-path=/tmp/uwsgi_temp \
				--http-scgi-temp-path=/tmp/scgi_temp \
				--user=root \
				--group=root \
				--with-http_ssl_module \
				--with-http_addition_module \
				--with-http_sub_module \
				--with-http_dav_module \
				--with-http_gunzip_module \
				--with-http_gzip_static_module \
				--with-http_random_index_module \
				--with-http_secure_link_module \
				--with-http_stub_status_module \
				--with-http_auth_request_module \
				--with-threads \
				--with-stream \
				--with-stream_ssl_module \
				--with-http_slice_module \
				--with-file-aio \
				--with-http_v2_module \
				--with-ipv6 \
				--with-pcre=/software/temp/pcre-$PCRE_VER \
				--with-openssl=/software/temp/openssl-${SSL_VER} \
				--with-zlib=/software/temp/zlib-${ZLIB_VER} \
				--with-ld-opt="-Wl,-rpath,/usr/local/luajit/lib" \
				--add-module=/software/temp/ngx_cache_purge-2.3 --add-module=/software/temp/ngx_devel_kit-${NGX_DEVEL_KIT_VERSION} --add-module=/software/temp/lua-nginx-module-${NGINX_LUA_MODULE_VERSION} \  
    && make  \
		&& make install

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
	&& ln -sf /dev/stderr /var/log/nginx/error.log

	
EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]
